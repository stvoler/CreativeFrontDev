$regular: "CoFoSans-Regular";
$medium: "CoFoSans-Medium";
$bold: "CoFoSans-Bold";
$black: "CoFoSans-Black";

@font-face {
  font-family: $regular;
  src: url("../fonts/CoFoSans-Regular.woff2") format("woff2"), url("../fonts/CoFoSans-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: $medium;
  src: url("../fonts/CoFoSans-Medium.woff2") format("woff2"), url("../fonts/CoFoSans-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: $bold;
  src: url("../fonts/CoFoSans-Bold.woff2") format("woff2"), url("../fonts/CoFoSans-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: $black;
  src: url("../fonts/CoFoSans-Black.woff2") format("woff2"), url("../fonts/CoFoSans-Black.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  font-size: 13px;
}

body {
  margin: 0;
  --color-text: #111;
  --color-bg: #edeee9;
  --color-link: #000;
  --color-link-hover: #000;
  --color-menu: #000;
  --color-menu-hover: #f32015;
  color: var(--color-text);
  background-color: var(--color-bg);
  --cursor-stroke: #000;
  --cursor-fill: #000;
  --cursor-stroke-width: 1px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: $regular, sans-serif;
}

/* Page Loader */
.js .loading::before,
.js .loading::after {
  content: "";
  position: fixed;
  z-index: 1000;
}

.js .loading::before {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-bg);
}

.js .loading::after {
  top: 50%;
  left: 50%;
  width: 60px;
  height: 60px;
  margin: -30px 0 0 -30px;
  opacity: 0.4;
  background: var(--color-link);
  animation: loaderAnim 0.7s linear infinite alternate forwards;
}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5, 0.5, 1);
  }
}

header {
  position: absolute;
  width: 100%;
  top: 0;
  display: grid;
  grid-template-columns: 81px 1fr 1fr auto;
  text-transform: uppercase;
  z-index: 1;

  .logo{
    font: 34px/0.9 $bold;
    color: #112200;
    margin: 18px 0 auto 0;
    grid-column-start: 2;
  }

  input[type="checkbox"] {
    display: none;
    width: 81px;
    height: 81px;
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 11;
    -webkit-touch-callout: none;
    &:checked ~ #trigger {
      background-size: 0 0;

      &:before {
        transform: translateY(275%) rotate(45deg);
      }
    }

    &:checked ~ ul {
      transform: none;
    }
  }
}

.menu{
  display: flex;
  flex-direction: column;
  margin: 18px 0 auto 5%;
  a{
    color: #112200;
    font:18px $medium;
    margin-bottom: 30px;
  }
}

#trigger {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  width: 81px;
  height: 81px;
  border: none;
  background: #E7411F;
  background-size: 100% 3px;
  transition: background-size 0.3s ease-in-out;
  cursor: pointer;
  outline: none;
  z-index: 10;
  margin: 0 0 0 auto;

  &:before{
    content: attr(title);
    font: 16px "CoFoSans-Bold";
    color: white;
    text-transform: uppercase;
    display: block;
    transition: transform 0.3s ease-in-out;
  }

  &.active {
    background-size: 0 0;

    &:before {
      transform: translateY(275%) rotate(45deg);
    }
  }
}

section {
  height: 100vh;
  position: relative;
  grid-column: 1/7;
  overflow: hidden;
  picture{
    height: 100vh;
    overflow: hidden;
    position: fixed;
    &:before{
      content: attr(title);
      position: absolute;
      bottom: 116px;
      color: #112200;
      font:169px/0.81 $medium;
      z-index: 1;
      max-width: 924px;
      margin: 0 auto;
      left: 15%;
      right: 0;
    }
  }
  img{
    width: 100%;
  }
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
  cursor: pointer;
}

a:hover,
a:focus {
  color: var(--color-link-hover);
  outline: none;
}

.items {
  width: 100%;
  //padding: 113px 74px;
  padding: 0;
  margin: auto;
  position: relative;
  user-select: none;
  counter-reset: menucounter;
  display: grid;
  grid-template-columns: 75px 1fr 1fr 0.9fr 0.9fr 1fr 1fr 75px;
  grid-gap: 63px;
}

.item {
  position: relative;
  order: 2;
  &:hover::before {
    opacity: 1;
    transform: translateX(0);
  }
  &::before {
    counter-increment: menucounter;
    content: counters(menucounter, ".", decimal-leading-zero);
    position: absolute;
    color: white;
    left: 0;
    top: 20px;
    height: 60%;
    padding-left: 1rem;
    display: flex;
    align-items: center;
    line-height: 1;
    font-weight: bold;
    opacity: 0;
    transform: translateX(-1rem);
    transition: transform 0.3s, opacity 0.3s;
  }
  &:nth-child(1) {
    grid-column: 2/4;
    margin-top: 160px;
  }
  &:nth-child(2) {
    grid-column: 4/6;
    margin-top: 427px;
  }
  &:nth-child(3) {
    grid-column: 6/8;
  }
  &:nth-child(4) {
    grid-column: 2/6;
    text-align: center;
  }
  &:nth-child(5) {
    grid-column: 6/8;
  }
  
  &.active{
    grid-column: 1/9;
    order: 1;
    margin: 0;
    picture{
      height: 100%;
      overflow: hidden;
    }
    .item-text{
      display: none;
    }
    &.gr{
      grid-column: 4/6;
      order: 2;
      margin: auto;
    }
  }

  picture{
    &::before{
      content: attr(title);
      position: absolute;
      bottom: 116px;
      color: #112200;
      font:169px/0.81 $medium;
      z-index: 1;
      max-width: 924px;
      margin: 0 auto;
      left: 15%;
      right: 0;
    }
  }
  
  img {
    max-width: 100%;
  }
}

.item-text {
  position: relative;
  cursor: pointer;
  padding: 0.5rem;
  display: block;
  overflow: hidden;
  font-size: 26px;
}

.item-textinner {
  display: block;
  font: 16px/1.2 $bold;
  text-transform: uppercase;
  white-space: nowrap;
  color: var(--color-menu);
}

p {
  font-size: 34px;
}

.js .item-textinner {
  transform: translateY(100%);
}

.item:hover .item-textinner {
  color: var(--color-menu-hover);
}

.hover-reveal {
  position: absolute;
  z-index: 0;
  width: 230px;
  height: 230px;
  border-radius: 50%;
  overflow: hidden;
  top: 0;
  left: 0;
  pointer-events: none;
  opacity: 0;
}

.hover-reveal__inner {
  overflow: hidden;
}

.hover-reveal__inner,
.hover-reveal__img {
  width: 100%;
  height: 100%;
  position: relative;
}

.hover-reveal__img {
  background-size: cover;
  background-position: 50% 50%;
}

.cursor {
  display: none;
}

@media screen and (min-width: 53em) {
  .item {
    justify-content: initial;
  }
  .item-text {
    padding: 1vh 0;
    font-size: 23px;
  }
  .item-sub {
    display: flex;
  }
}

@media (any-pointer: fine) {
  .cursor {
    position: fixed;
    top: 0;
    left: 0;
    display: block;
    pointer-events: none;
  }
  .cursor__inner {
    fill: var(--cursor-fill);
    stroke: var(--cursor-stroke);
    stroke-width: var(--cursor-stroke-width);
    opacity: 0.9;
  }
}

/*! locomotive-scroll v3.5.4 | MIT License | https://github.com/locomotivemtl/locomotive-scroll */
html.has-scroll-smooth {
  overflow: hidden;
}

html.has-scroll-dragging {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.has-scroll-smooth body {
  overflow: hidden;
}

.has-scroll-smooth [data-scroll-container] {
  min-height: 100vh;
}

.c-scrollbar {
  position: absolute;
  right: 0;
  top: 0;
  width: 11px;
  height: 100vh;
  transform-origin: center right;
  transition: transform 0.3s, opacity 0.3s;
  opacity: 0;
}
.c-scrollbar:hover {
  transform: scaleX(1.45);
}
.c-scrollbar:hover,
.has-scroll-scrolling .c-scrollbar,
.has-scroll-dragging .c-scrollbar {
  opacity: 1;
}

.c-scrollbar_thumb {
  position: absolute;
  top: 0;
  right: 0;
  background-color: black;
  opacity: 0.5;
  width: 7px;
  border-radius: 10px;
  margin: 2px;
  cursor: -webkit-grab;
  cursor: grab;
}
.has-scroll-dragging .c-scrollbar_thumb {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}



.line {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  height: 8px;
  position: absolute;
  bottom: 0;
  display: inline-block;
  background-color: rgba(255, 255, 255, 1);
}